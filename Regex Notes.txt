Regex Notes  Prof Nico plataforma Alura

29/12/2022
\d = qualquer digito ex:(0123456789) |(classes de char)
--------------------------------------------------------------------------------------------------------------------------
. = qualquer coisa
--------------------------------------------------------------------------------------------------------------------------
\. = literalmente um ponto
--------------------------------------------------------------------------------------------------------------------------
{} = quantifier especifica o numero de vezes q a regex deve aparecer ex.(\d{3}) |(quantifier)
--------------------------------------------------------------------------------------------------------------------------
[] = classes de caracteres, definidos pelo programador. ex(\d = [0-9]) |(classes de char)
--------------------------------------------------------------------------------------------------------------------------
\s = espaço em branco (comunmente usado com +) |(classes de char)
--------------------------------------------------------------------------------------------------------------------------
? = 0 ou uma vez, pode ou n ter a regex anterior |(quantifier)
--------------------------------------------------------------------------------------------------------------------------
* = 0 ou mais vezez |(quantifier)
--------------------------------------------------------------------------------------------------------------------------
+ = 1 ou mais vezez |(quantifier)
--------------------------------------------------------------------------------------------------------------------------
- = quando dentro de colchetes significa "até". ex(\d[0-3]) = qualquer digito de 0 "até" 3 obs. tbm pode ser letras [a-z] mas nao pega ç, acentos e etc.
--------------------------------------------------------------------------------------------------------------------------
{n} = exatamente n vezes |(quantifier)
--------------------------------------------------------------------------------------------------------------------------
{n,} = no minimo n vezes |(quantifier)
--------------------------------------------------------------------------------------------------------------------------
{n,m} = no minimo n vezes, e no maximo m vezes |(quantifier)
--------------------------------------------------------------------------------------------------------------------------
30/12/2022

\w = word char [A-Za-z0-9_] obs.: _ é ele mesmo, underline(undersquare como o prof chamou) |(classes de char)
--------------------------------------------------------------------------------------------------------------------------
\b = word boundary |(ancoras)
--------------------------------------------------------------------------------------------------------------------------
^ = no inicio do target  ex(^thiago) target = thiago barauna paiva |(ancoras)
--------------------------------------------------------------------------------------------------------------------------
$ = no final do target ex(paiva$) target = thiago barauna paiva |(ancoras)
--------------------------------------------------------------------------------------------------------------------------
grupos
() = serve para destacar trechos especificos de uma regex, n muda a expressao mas gera um retorno pra o regex engine nesse caso o js. ex(target- 02 de maio de 2000; regex- [0-3]?\d\s+de\s+[A-Z]?[a-z]?[a-zç]{3,8}\s+de\s+([1-2]\d{3})  ) destaca todo target grupo será 2000.
--------------------------------------------------------------------------------------------------------------------------
(?:) = Non-capturing group usar caso queira q o grupo NÃO gere retorno para o regex engine. ex( (?:de\s+) )
--------------------------------------------------------------------------------------------------------------------------
+? = usar ? depois de um quantifier para fazelo parar apos encontrar o primeiro char especificado. ex(target- <h1 class="cu">  regex- <h1.+?>) fonte aula 1 ganacioso ou preguiçoso
--------------------------------------------------------------------------------------------------------------------------
| = or ou ou kkkkk
--------------------------------------------------------------------------------------------------------------------------
back references = usado para se referenciar a um grupo anterior, utilizando seu resultado ex( \1 faz referencia ao primeiro grupo onde 1 é o indice) obs. aparentemente os resultados são armazenados em arrays entaõ os indices começam em 0.
--------------------------------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------------------------------------------------
